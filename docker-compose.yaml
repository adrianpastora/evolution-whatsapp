services:
  api:
    container_name: evolution_api_lite
    build: .
    restart: always
    depends_on:
      - redis
      - postgres
    ports:
      - 3016:3016
    volumes:
      - evolution_instances:/evolution/instances
      - ./logs:/evolution/logs
    networks:
      - evolution-net
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3016/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  redis:
    image: redis:latest
    networks:
      - evolution-net
    container_name: evolution_redis
    restart: always
    command: >
      redis-server --port 6379 --appendonly yes
    volumes:
      - evolution_redis:/data
    ports:
      - 6380:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    container_name: evolution_postgres
    image: postgres:15
    networks:
      - evolution-net
    command: ["postgres", "-c", "max_connections=1000", "-c", "listen_addresses=*"]
    restart: always
    ports:
      - 5437:5432
    environment:
      - POSTGRES_USER=evolution_user
      - POSTGRES_PASSWORD=evolution_pass
      - POSTGRES_DB=evolution_db
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U evolution_user -d evolution_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  evolution_instances:
  evolution_redis:
  postgres_data:

networks:
  evolution-net:
    name: evolution-net
    driver: bridge
