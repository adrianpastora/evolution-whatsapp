name: Deploy Evolution API Lite (Simple)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.10.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npm run db:generate

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Add SSH Host Key
        run: ssh-keyscan -H -p 2222 ssh.datanodex.com >> ~/.ssh/known_hosts

      - name: Copy files to server
        run: |
          rsync -avz --delete -e "ssh -p 2222" \
            --exclude 'node_modules' \
            --exclude '.git' \
            --exclude '.github' \
            --exclude '.env' \
            ./ ape@ssh.datanodex.com:/home/ape/evolution-api-lite

      - name: Create .env file on server
        run: |
          ssh -p 2222 ape@ssh.datanodex.com "
            cd /home/ape/evolution-api-lite &&
            cat > .env << 'EOF'
            SERVER_TYPE=http
            SERVER_PORT=3016
            SERVER_URL=https://evolution.datanodex.com
            SERVER_DISABLE_DOCS=false
            SERVER_DISABLE_MANAGER=true
            CORS_ORIGIN=https://n8n.datanodex.com,https://whatsapp.datanodex.com,https://evolution.datanodex.com,http://localhost:3000,http://localhost:3016,http://192.168.1.196:3016,http://127.0.0.1:3016,*
            CORS_METHODS=GET,POST,PUT,DELETE
            CORS_CREDENTIALS=true
            DATABASE_PROVIDER=postgresql
            DATABASE_CONNECTION_URI=postgresql://evolution_user:evolution_pass@postgres:5432/evolution_db
            DATABASE_CONNECTION_CLIENT_NAME=evolution-api
            DATABASE_SAVE_DATA_INSTANCE=true
            DATABASE_SAVE_DATA_HISTORIC=true
            DATABASE_SAVE_DATA_NEW_MESSAGE=true
            DATABASE_SAVE_DATA_MESSAGE_UPDATE=true
            DATABASE_SAVE_DATA_CONTACTS=true
            DATABASE_SAVE_DATA_CHATS=true
            DATABASE_SAVE_DATA_LABELS=true
            DATABASE_SAVE_DATA_IS_ON_WHATSAPP=true
            DATABASE_SAVE_DATA_IS_ON_WHATSAPP_DAYS=7
            DATABASE_DELETE_DATA_LOGICAL_MESSAGE_DELETE=true
            CACHE_REDIS_ENABLED=true
            CACHE_REDIS_URI=redis://redis:6379
            CACHE_REDIS_PREFIX_KEY=evolution
            CACHE_REDIS_TTL=3600
            CACHE_REDIS_SAVE_INSTANCES=true
            CACHE_LOCAL_ENABLED=false
            CACHE_LOCAL_TTL=3600
            AUTHENTICATION_API_KEY=evolution_api_key_2024_secure_CHANGE_THIS
            AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES=false
            LOG_LEVEL=ERROR,WARN,INFO,DEBUG
            LOG_COLOR=true
            LOG_BAILEYS=debug
            WEBSOCKET_ENABLED=true
            WEBSOCKET_GLOBAL_EVENTS=true
            LANGUAGE=es
            PRODUCTION=true
            TELEMETRY_ENABLED=true
            EOF
          "

      - name: Deploy with Docker Compose
        run: |
          ssh -p 2222 ape@ssh.datanodex.com "
            cd /home/ape/evolution-api-lite &&
            docker-compose pull &&
            docker-compose down --remove-orphans &&
            docker-compose up -d redis postgres
          "

      - name: Wait for PostgreSQL to be ready
        run: |
          ssh -p 2222 ape@ssh.datanodex.com "
            cd /home/ape/evolution-api-lite &&
            timeout 60 bash -c 'until docker exec evolution_postgres pg_isready -U evolution_user -d evolution_db; do sleep 2; done'
          "

      - name: Deploy API service
        run: |
          ssh -p 2222 ape@ssh.datanodex.com "
            cd /home/ape/evolution-api-lite &&
            docker-compose build --no-cache api &&
            docker-compose up -d api
          " 